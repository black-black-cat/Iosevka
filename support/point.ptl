export all : class Point
	public [new x y on cubic subdivided] : begin
		this.x = x
		this.y = y
		this.on = on || false
		this.cubic = cubic || false
		this.subdivided = subdivided || false

	static [from z on cubic subdivided] : new Point
		* z.x
		* z.y
		* on
		* cubic
		* subdivided

	static [cornerFrom     z]   : new Point z.x z.y true  false false
	static [offFrom        z]   : new Point z.x z.y false false false
	static [cubicOffFrom   z]   : new Point z.x z.y false true  false
	static [cornerFromXY   x y] : new Point x   y   true  false false
	static [offFromXY      x y] : new Point x   y   false false false
	static [cubicOffFromXY x y] : new Point x   y   false true  false

	static [transformed tfm x y on cubic subdivided] : new Point
		* x * tfm.xx + y * tfm.yx + tfm.x
		* x * tfm.xy + y * tfm.yy + tfm.y
		* on
		* cubic
		* subdivided
